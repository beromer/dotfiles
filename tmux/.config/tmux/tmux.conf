### window and pane indexing ###
unbind C-b
set-option -g prefix M-y
bind-key M-y send-prefix
set -g base-index 1
setw -g pane-base-index 1

### Automatically set window title ###
set-window-option -g automatic-rename on
set-option -g set-titles on

### use vi bindings ###
set -g status-keys vi
setw -g mode-keys vi

set -g history-limit 10000

setw -g mouse on
setw -g monitor-activity on

bind-key v split-window -h
bind-key s split-window -v

# Use a to toggle synchronize panes
bind a set-window-option synchronize-panes

# Length of tmux status line
set -g status-left-length 30
set -g status-right-length 150

set-option -g status "on"

set-option -g status-position top
set-option -g status-interval 5
set-option -g status-style bg=colour237,fg=colour008

# Default window title colors
set-window-option -g window-status-style bg=colour012,fg=colour000

# Default window with an activity alert
set-window-option -g window-status-activity-style bg=colour003,fg=colour008

# Active window title colors
set-window-option -g window-status-current-style bg=colour006,fg=colour000

set-window-option -g window-status-current-format "\
#[fg=colour006, bg=colour237, bold][\
#[fg=colour006, bg=colour237, bold]#I·\
#[fg=colour006, bg=colour237, bold]#W\
#[fg=colour006, bg=colour237, bold]]"

set-window-option -g window-status-format "\
#[fg=colour008, bg=colour237,italics][\
#[fg=colour008, bg=colour237,italics]#I·\
#[fg=colour008, bg=colour237,italics]#W\
#[fg=colour008, bg=colour237,italics]]"

# Set active pane border color
set-option -g pane-active-border-style fg=colour006

# Set inactive pane border color
set-option -g pane-border-style fg=colour008

# set inactive pane bg color
set -g window-style 'bg=colour234'
set -g window-active-style 'bg=colour233'

set -g focus-events on

set -g status-right "#{?client_prefix,#[bg=colour1]#[fg=colour000],}#[bold][%a %b %-e %Y][%-l:%M%p]"
set -g status-left "#{?window_zoomed_flag,[zoom], }"

# Pane number display
set-option -g display-panes-active-colour colour002 #fg2
set-option -g display-panes-colour colour236 #bg1
set -g display-panes-time 4000

# Clock
set-window-option -g clock-mode-colour colour006
set-window-option -g clock-mode-style 12

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind-key J resize-pane -D 20
bind-key K resize-pane -U 20
bind-key H resize-pane -L 20
bind-key L resize-pane -R 20

bind -n M-J resize-pane -D 5
bind -n M-K resize-pane -U 5
bind -n M-H resize-pane -L 5
bind -n M-L resize-pane -R 5

# Enable tmux support for colored undercurls
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D 
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Shift arrow to switch windows
bind -n M-p previous-window
bind -n M-n next-window

bind-key p kill-session

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind r source-file ~/.config/tmux/tmux.conf

set -g default-terminal "xterm-256color"
#source /usr/share/powerline/bindings/tmux/powerline.conf

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
##  is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
##      | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
##  bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
##  bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
##  bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
##  bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
##  tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
##  if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
##      "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
##  if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
##      "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
